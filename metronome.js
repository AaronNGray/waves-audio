(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/* Generated by es6-transpiler v 0.7.14-2 */var DP$0 = Object.defineProperty;/**
 * @fileoverview WAVE audio library element: a web audio granular engine.
 * @author Karim.Barkati@ircam.fr, Norbert.Schnell@ircam.fr, Victor.Saiz@ircam.fr
 * @version 2.1.0
 */
"use strict";

var Scheduled = require("../scheduler/scheduled");
//var Transported = require("../transporter/transported");

var ScheduledMetronome = (function(super$0){var MIXIN$0 = function(t,s){for(var p in s){if(s.hasOwnProperty(p)){DP$0(t,p,Object.getOwnPropertyDescriptor(s,p));}}return t};function ScheduledMetronome() {super$0.apply(this, arguments)}MIXIN$0(ScheduledMetronome, super$0);ScheduledMetronome.prototype = Object.create(super$0.prototype, {"constructor": {"value": ScheduledMetronome, "configurable": true, "writable": true} });DP$0(ScheduledMetronome, "prototype", {"configurable": false, "enumerable": false, "writable": false});
  ScheduledMetronome.prototype.reset = function(time) {
    return time;
  }

  ScheduledMetronome.prototype.execute = function(time) {
    return this.parent.trigger(time);
  }
;return ScheduledMetronome;})(Scheduled);

var Metronome = (function(){
  function Metronome() {var name = arguments[0];if(name === void 0)name = "metronome";
    this.name = name;

    this.period = 1; // in sec
    this.attack = 0.002;
    this.release = 0.098;

    this.__gainNode = audioContext.createGain();

    this.__envNode = audioContext.createGain();
    this.__envNode.gain.value = 0.0;
    this.__envNode.connect(this.__gainNode);

    this.__osc = audioContext.createOscillator();
    this.__osc.frequency.value = 600;
    this.__osc.start(0);
    this.__osc.connect(this.__envNode);

    this.scheduled = new ScheduledMetronome(this);
  }Object.defineProperties(Metronome.prototype, {gain: {"get": gain$get$0, "set": gain$set$0, "configurable": true, "enumerable": true}, frequency: {"get": frequency$get$0, "set": frequency$set$0, "configurable": true, "enumerable": true}});DP$0(Metronome, "prototype", {"configurable": false, "enumerable": false, "writable": false});

  Metronome.prototype.trigger = function(time) {
    var attack = this.attack;
    var release = this.release;
    var period = this.period;

    if (period < this.attack + this.release) {
      var scale = period / (this.attack + this.release);
      attack *= scale;
      release *= scale;
    }

    this.__envNode.gain.setValueAtTime(0.0, time);
    this.__envNode.gain.linearRampToValueAtTime(1.0, time + attack);
    this.__envNode.gain.exponentialRampToValueAtTime(0.0000001, time + attack + release);

    return time + period;
  }

  function gain$set$0(value) {
    this.__gainNode.gain.value = value;
  }

  function gain$get$0() {
    return this.__gainNode.gain.value;
  }

  function frequency$set$0(value) {
    this.__osc.frequency.value = value;
  }

  function frequency$get$0() {
    return this.__osc.frequency.value;
  }

  Metronome.prototype.connect = function(target) {
    this.__gainNode.connect(target);
    return this;
  }

  Metronome.prototype.disconnect = function(output) {
    this.__gainNode.disconnect(output);
    return this;
  }
;return Metronome;})();

module.exports = Metronome;
},{"../scheduler/scheduled":2}],2:[function(require,module,exports){
/* Generated by es6-transpiler v 0.7.14-2 */
"use strict";

var Scheduled = (function(){var DP$0 = Object.defineProperty;

  function Scheduled(parent) {
    this.parent = parent;
    // written by scheduler only others read
    this.scheduler = null;
  }Object.defineProperties(Scheduled.prototype, {time: {"get": time$get$0, "configurable": true, "enumerable": true}});DP$0(Scheduled, "prototype", {"configurable": false, "enumerable": false, "writable": false});

  // to be implemented by instance
  Scheduled.prototype.reset = function(time) {
    return Infinity;
  }

  // to be implemented by instance
  Scheduled.prototype.execute = function(time) {
    return Infinity;
  }

  Scheduled.prototype.reschedule = function(time) {
    this.scheduler.reschedule(this, time);
  }

  function time$get$0() {
    return this.scheduler.time;
  }
;return Scheduled;})();

module.exports = Scheduled;
},{}]},{},[1])
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zY2huZWxsL0RldmVsb3BtZW50L3dlYi9taXNjL2d1bHBCcm93RXJzeTYvbm9kZV9tb2R1bGVzL2Jyb3dzZXJpZnkvbm9kZV9tb2R1bGVzL2Jyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsIi9Vc2Vycy9zY2huZWxsL0RldmVsb3BtZW50L3dlYi93YXZlL2xpYi9naXRodWIvYXVkaW8vbWV0cm9ub21lL2luZGV4LmpzIiwiL1VzZXJzL3NjaG5lbGwvRGV2ZWxvcG1lbnQvd2ViL3dhdmUvbGliL2dpdGh1Yi9hdWRpby9zY2hlZHVsZXIvc2NoZWR1bGVkLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDdkZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qIEdlbmVyYXRlZCBieSBlczYtdHJhbnNwaWxlciB2IDAuNy4xNC0yICovdmFyIERQJDAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7LyoqXG4gKiBAZmlsZW92ZXJ2aWV3IFdBVkUgYXVkaW8gbGlicmFyeSBlbGVtZW50OiBhIHdlYiBhdWRpbyBncmFudWxhciBlbmdpbmUuXG4gKiBAYXV0aG9yIEthcmltLkJhcmthdGlAaXJjYW0uZnIsIE5vcmJlcnQuU2NobmVsbEBpcmNhbS5mciwgVmljdG9yLlNhaXpAaXJjYW0uZnJcbiAqIEB2ZXJzaW9uIDIuMS4wXG4gKi9cblwidXNlIHN0cmljdFwiO1xuXG52YXIgU2NoZWR1bGVkID0gcmVxdWlyZShcIi4uL3NjaGVkdWxlci9zY2hlZHVsZWRcIik7XG4vL3ZhciBUcmFuc3BvcnRlZCA9IHJlcXVpcmUoXCIuLi90cmFuc3BvcnRlci90cmFuc3BvcnRlZFwiKTtcblxudmFyIFNjaGVkdWxlZE1ldHJvbm9tZSA9IChmdW5jdGlvbihzdXBlciQwKXt2YXIgTUlYSU4kMCA9IGZ1bmN0aW9uKHQscyl7Zm9yKHZhciBwIGluIHMpe2lmKHMuaGFzT3duUHJvcGVydHkocCkpe0RQJDAodCxwLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IocyxwKSk7fX1yZXR1cm4gdH07ZnVuY3Rpb24gU2NoZWR1bGVkTWV0cm9ub21lKCkge3N1cGVyJDAuYXBwbHkodGhpcywgYXJndW1lbnRzKX1NSVhJTiQwKFNjaGVkdWxlZE1ldHJvbm9tZSwgc3VwZXIkMCk7U2NoZWR1bGVkTWV0cm9ub21lLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXIkMC5wcm90b3R5cGUsIHtcImNvbnN0cnVjdG9yXCI6IHtcInZhbHVlXCI6IFNjaGVkdWxlZE1ldHJvbm9tZSwgXCJjb25maWd1cmFibGVcIjogdHJ1ZSwgXCJ3cml0YWJsZVwiOiB0cnVlfSB9KTtEUCQwKFNjaGVkdWxlZE1ldHJvbm9tZSwgXCJwcm90b3R5cGVcIiwge1wiY29uZmlndXJhYmxlXCI6IGZhbHNlLCBcImVudW1lcmFibGVcIjogZmFsc2UsIFwid3JpdGFibGVcIjogZmFsc2V9KTtcbiAgU2NoZWR1bGVkTWV0cm9ub21lLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKHRpbWUpIHtcbiAgICByZXR1cm4gdGltZTtcbiAgfVxuXG4gIFNjaGVkdWxlZE1ldHJvbm9tZS5wcm90b3R5cGUuZXhlY3V0ZSA9IGZ1bmN0aW9uKHRpbWUpIHtcbiAgICByZXR1cm4gdGhpcy5wYXJlbnQudHJpZ2dlcih0aW1lKTtcbiAgfVxuO3JldHVybiBTY2hlZHVsZWRNZXRyb25vbWU7fSkoU2NoZWR1bGVkKTtcblxudmFyIE1ldHJvbm9tZSA9IChmdW5jdGlvbigpe1xuICBmdW5jdGlvbiBNZXRyb25vbWUoKSB7dmFyIG5hbWUgPSBhcmd1bWVudHNbMF07aWYobmFtZSA9PT0gdm9pZCAwKW5hbWUgPSBcIm1ldHJvbm9tZVwiO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG5cbiAgICB0aGlzLnBlcmlvZCA9IDE7IC8vIGluIHNlY1xuICAgIHRoaXMuYXR0YWNrID0gMC4wMDI7XG4gICAgdGhpcy5yZWxlYXNlID0gMC4wOTg7XG5cbiAgICB0aGlzLl9fZ2Fpbk5vZGUgPSBhdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuXG4gICAgdGhpcy5fX2Vudk5vZGUgPSBhdWRpb0NvbnRleHQuY3JlYXRlR2FpbigpO1xuICAgIHRoaXMuX19lbnZOb2RlLmdhaW4udmFsdWUgPSAwLjA7XG4gICAgdGhpcy5fX2Vudk5vZGUuY29ubmVjdCh0aGlzLl9fZ2Fpbk5vZGUpO1xuXG4gICAgdGhpcy5fX29zYyA9IGF1ZGlvQ29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG4gICAgdGhpcy5fX29zYy5mcmVxdWVuY3kudmFsdWUgPSA2MDA7XG4gICAgdGhpcy5fX29zYy5zdGFydCgwKTtcbiAgICB0aGlzLl9fb3NjLmNvbm5lY3QodGhpcy5fX2Vudk5vZGUpO1xuXG4gICAgdGhpcy5zY2hlZHVsZWQgPSBuZXcgU2NoZWR1bGVkTWV0cm9ub21lKHRoaXMpO1xuICB9T2JqZWN0LmRlZmluZVByb3BlcnRpZXMoTWV0cm9ub21lLnByb3RvdHlwZSwge2dhaW46IHtcImdldFwiOiBnYWluJGdldCQwLCBcInNldFwiOiBnYWluJHNldCQwLCBcImNvbmZpZ3VyYWJsZVwiOiB0cnVlLCBcImVudW1lcmFibGVcIjogdHJ1ZX0sIGZyZXF1ZW5jeToge1wiZ2V0XCI6IGZyZXF1ZW5jeSRnZXQkMCwgXCJzZXRcIjogZnJlcXVlbmN5JHNldCQwLCBcImNvbmZpZ3VyYWJsZVwiOiB0cnVlLCBcImVudW1lcmFibGVcIjogdHJ1ZX19KTtEUCQwKE1ldHJvbm9tZSwgXCJwcm90b3R5cGVcIiwge1wiY29uZmlndXJhYmxlXCI6IGZhbHNlLCBcImVudW1lcmFibGVcIjogZmFsc2UsIFwid3JpdGFibGVcIjogZmFsc2V9KTtcblxuICBNZXRyb25vbWUucHJvdG90eXBlLnRyaWdnZXIgPSBmdW5jdGlvbih0aW1lKSB7XG4gICAgdmFyIGF0dGFjayA9IHRoaXMuYXR0YWNrO1xuICAgIHZhciByZWxlYXNlID0gdGhpcy5yZWxlYXNlO1xuICAgIHZhciBwZXJpb2QgPSB0aGlzLnBlcmlvZDtcblxuICAgIGlmIChwZXJpb2QgPCB0aGlzLmF0dGFjayArIHRoaXMucmVsZWFzZSkge1xuICAgICAgdmFyIHNjYWxlID0gcGVyaW9kIC8gKHRoaXMuYXR0YWNrICsgdGhpcy5yZWxlYXNlKTtcbiAgICAgIGF0dGFjayAqPSBzY2FsZTtcbiAgICAgIHJlbGVhc2UgKj0gc2NhbGU7XG4gICAgfVxuXG4gICAgdGhpcy5fX2Vudk5vZGUuZ2Fpbi5zZXRWYWx1ZUF0VGltZSgwLjAsIHRpbWUpO1xuICAgIHRoaXMuX19lbnZOb2RlLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoMS4wLCB0aW1lICsgYXR0YWNrKTtcbiAgICB0aGlzLl9fZW52Tm9kZS5nYWluLmV4cG9uZW50aWFsUmFtcFRvVmFsdWVBdFRpbWUoMC4wMDAwMDAxLCB0aW1lICsgYXR0YWNrICsgcmVsZWFzZSk7XG5cbiAgICByZXR1cm4gdGltZSArIHBlcmlvZDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdhaW4kc2V0JDAodmFsdWUpIHtcbiAgICB0aGlzLl9fZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IHZhbHVlO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2FpbiRnZXQkMCgpIHtcbiAgICByZXR1cm4gdGhpcy5fX2dhaW5Ob2RlLmdhaW4udmFsdWU7XG4gIH1cblxuICBmdW5jdGlvbiBmcmVxdWVuY3kkc2V0JDAodmFsdWUpIHtcbiAgICB0aGlzLl9fb3NjLmZyZXF1ZW5jeS52YWx1ZSA9IHZhbHVlO1xuICB9XG5cbiAgZnVuY3Rpb24gZnJlcXVlbmN5JGdldCQwKCkge1xuICAgIHJldHVybiB0aGlzLl9fb3NjLmZyZXF1ZW5jeS52YWx1ZTtcbiAgfVxuXG4gIE1ldHJvbm9tZS5wcm90b3R5cGUuY29ubmVjdCA9IGZ1bmN0aW9uKHRhcmdldCkge1xuICAgIHRoaXMuX19nYWluTm9kZS5jb25uZWN0KHRhcmdldCk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBNZXRyb25vbWUucHJvdG90eXBlLmRpc2Nvbm5lY3QgPSBmdW5jdGlvbihvdXRwdXQpIHtcbiAgICB0aGlzLl9fZ2Fpbk5vZGUuZGlzY29ubmVjdChvdXRwdXQpO1xuICAgIHJldHVybiB0aGlzO1xuICB9XG47cmV0dXJuIE1ldHJvbm9tZTt9KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IE1ldHJvbm9tZTsiLCIvKiBHZW5lcmF0ZWQgYnkgZXM2LXRyYW5zcGlsZXIgdiAwLjcuMTQtMiAqL1xuXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBTY2hlZHVsZWQgPSAoZnVuY3Rpb24oKXt2YXIgRFAkMCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcblxuICBmdW5jdGlvbiBTY2hlZHVsZWQocGFyZW50KSB7XG4gICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgLy8gd3JpdHRlbiBieSBzY2hlZHVsZXIgb25seSBvdGhlcnMgcmVhZFxuICAgIHRoaXMuc2NoZWR1bGVyID0gbnVsbDtcbiAgfU9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKFNjaGVkdWxlZC5wcm90b3R5cGUsIHt0aW1lOiB7XCJnZXRcIjogdGltZSRnZXQkMCwgXCJjb25maWd1cmFibGVcIjogdHJ1ZSwgXCJlbnVtZXJhYmxlXCI6IHRydWV9fSk7RFAkMChTY2hlZHVsZWQsIFwicHJvdG90eXBlXCIsIHtcImNvbmZpZ3VyYWJsZVwiOiBmYWxzZSwgXCJlbnVtZXJhYmxlXCI6IGZhbHNlLCBcIndyaXRhYmxlXCI6IGZhbHNlfSk7XG5cbiAgLy8gdG8gYmUgaW1wbGVtZW50ZWQgYnkgaW5zdGFuY2VcbiAgU2NoZWR1bGVkLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKHRpbWUpIHtcbiAgICByZXR1cm4gSW5maW5pdHk7XG4gIH1cblxuICAvLyB0byBiZSBpbXBsZW1lbnRlZCBieSBpbnN0YW5jZVxuICBTY2hlZHVsZWQucHJvdG90eXBlLmV4ZWN1dGUgPSBmdW5jdGlvbih0aW1lKSB7XG4gICAgcmV0dXJuIEluZmluaXR5O1xuICB9XG5cbiAgU2NoZWR1bGVkLnByb3RvdHlwZS5yZXNjaGVkdWxlID0gZnVuY3Rpb24odGltZSkge1xuICAgIHRoaXMuc2NoZWR1bGVyLnJlc2NoZWR1bGUodGhpcywgdGltZSk7XG4gIH1cblxuICBmdW5jdGlvbiB0aW1lJGdldCQwKCkge1xuICAgIHJldHVybiB0aGlzLnNjaGVkdWxlci50aW1lO1xuICB9XG47cmV0dXJuIFNjaGVkdWxlZDt9KSgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFNjaGVkdWxlZDsiXX0=
